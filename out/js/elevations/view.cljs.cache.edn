;; Analyzed by ClojureScript 0.0-3195
{:use-macros {spy elevations.macros}, :excludes #{}, :name elevations.view, :imports nil, :requires {util elevations.util, elevations.util elevations.util, vdom.elm vdom.elm, cljs.core.async cljs.core.async, async cljs.core.async}, :uses {event vdom.elm, put! cljs.core.async}, :defs {linear {:protocol-inline nil, :meta {:arglists (quote ([ds axis rng])), :end-column 13, :end-line 15, :column 7, :line 15, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :name elevations.view/linear, :variadic false, :file "src/elevations/view.cljs", :end-column 13, :method-params ([ds axis rng]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ds axis rng])), :test true}, extrema {:protocol-inline nil, :meta {:arglists (quote ([y high low])), :end-column 14, :end-line 89, :column 7, :line 89, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :name elevations.view/extrema, :variadic false, :file "src/elevations/view.cljs", :end-column 14, :method-params ([y high low]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 3, :fn-var true, :arglists (quote ([y high low])), :test true}, main {:protocol-inline nil, :meta {:arglists (quote ([actions])), :end-column 11, :end-line 152, :column 7, :line 152, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :name elevations.view/main, :variadic false, :file "src/elevations/view.cljs", :end-column 11, :method-params ([actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([actions])), :test true}, elevations {:protocol-inline nil, :meta {:arglists (quote ([{{:keys [started points], :as selected} :selected, :keys [scrub]} actions])), :end-column 17, :end-line 105, :column 7, :line 105, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :name elevations.view/elevations, :variadic false, :file "src/elevations/view.cljs", :end-column 17, :method-params ([p__98379 actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{{:keys [started points], :as selected} :selected, :keys [scrub]} actions])), :test true}, margin {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 3, :method-params ([f x] [s f x]), :arglists ([f x] [s f x]), :arglists-meta (nil nil)}, :arglists (quote ([f x] [s f x])), :end-column 13, :end-line 11, :column 7, :line 11, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :name elevations.view/margin, :variadic false, :file "src/elevations/view.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([f x] [s f x]), :arglists ([f x] [s f x]), :arglists-meta (nil nil)}, :method-params ([f x] [s f x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists ([f x] [s f x]), :test true}, fire {:protocol-inline nil, :meta {:arglists (quote ([actions k])), :end-column 11, :end-line 56, :column 7, :line 56, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :name elevations.view/fire, :variadic false, :file "src/elevations/view.cljs", :end-column 11, :method-params ([actions k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([actions k])), :test true}, map-window {:protocol-inline nil, :meta {:arglists (quote ([actions])), :end-column 17, :end-line 62, :column 7, :line 62, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :name elevations.view/map-window, :variadic false, :file "src/elevations/view.cljs", :end-column 17, :method-params ([actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([actions])), :test true}, nearest {:protocol-inline nil, :meta {:arglists (quote ([pts])), :end-column 14, :end-line 50, :column 7, :line 50, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :name elevations.view/nearest, :variadic false, :file "src/elevations/view.cljs", :end-column 14, :method-params ([pts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pts])), :test true}, scrubber-time {:protocol-inline nil, :meta {:arglists (quote ([scale])), :end-column 20, :end-line 44, :column 7, :line 44, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :name elevations.view/scrubber-time, :variadic false, :file "src/elevations/view.cljs", :end-column 20, :method-params ([scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([scale])), :test true}, lon-lat {:meta {:end-column 13, :end-line 8, :column 6, :line 8, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :file "src/elevations/view.cljs", :line 8, :column 1, :end-line 8, :end-column 13, :test true, :name elevations.view/lon-lat}, xy {:meta {:end-column 8, :end-line 7, :column 6, :line 7, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :file "src/elevations/view.cljs", :line 7, :column 1, :end-line 7, :end-column 8, :test true, :name elevations.view/xy}, scrubber-x {:protocol-inline nil, :meta {:arglists (quote ([svg])), :end-column 17, :end-line 37, :column 7, :line 37, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :name elevations.view/scrubber-x, :variadic false, :file "src/elevations/view.cljs", :end-column 17, :method-params ([svg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([svg])), :test true}, cursor {:protocol-inline nil, :meta {:arglists (quote ([svg x y])), :end-column 13, :end-line 31, :column 7, :line 31, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :name elevations.view/cursor, :variadic false, :file "src/elevations/view.cljs", :end-column 13, :method-params ([svg x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([svg x y])), :test true}, size {:meta {:end-column 10, :end-line 60, :column 6, :line 60, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :file "src/elevations/view.cljs", :line 60, :column 1, :end-line 60, :end-column 10, :test true, :name elevations.view/size}, line {:meta {:end-column 10, :end-line 9, :column 6, :line 9, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :file "src/elevations/view.cljs", :line 9, :column 1, :end-line 9, :end-column 10, :test true, :name elevations.view/line}, arrowhead {:meta {:end-column 15, :end-line 20, :column 6, :line 20, :file "/Users/exupero/code/elevations/src/elevations/view.cljs"}, :file "src/elevations/view.cljs", :line 20, :column 1, :end-line 20, :end-column 15, :test true, :name elevations.view/arrowhead}}, :require-macros {elevations.macros elevations.macros}, :cljs.analyzer/constants {:order [:lon :lat :marker :id :viewBox :refX :refY :markerWidth :markerHeight :orient :path :d :stroke-width :time :point :scrub :show? :geojson :map-pane :svg :width :height :style :g :class :transform :circle :cx :cy :r :fill :text :dx :dy :line :marker-end :y1 :y2 :selected :points :started :defs :elevation :x1 :x2 :rect :x :y :onmousemove :tracks :droppable? :div :ul :className :li :onclick :select :duration :section :main], :seen #{:y :started :path :r :elevation :transform :selected :dx :ul :refY :marker :li :fill :section :time :markerWidth :geojson :circle :markerHeight :y1 :tracks :width :onclick :dy :duration :points :orient :scrub :className :show? :map-pane :style :div :g :line :stroke-width :cx :id :class :cy :lon :defs :svg :lat :d :point :x :x1 :onmousemove :y2 :viewBox :main :rect :refX :x2 :height :marker-end :select :text :droppable?}}, :doc nil}